// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: jsonrpc.proto

package jsonrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a request ID (string or number)
type ID struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*ID_Str
	//	*ID_Num
	Kind          isID_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ID) Reset() {
	*x = ID{}
	mi := &file_jsonrpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_jsonrpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_jsonrpc_proto_rawDescGZIP(), []int{0}
}

func (x *ID) GetKind() isID_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *ID) GetStr() string {
	if x != nil {
		if x, ok := x.Kind.(*ID_Str); ok {
			return x.Str
		}
	}
	return ""
}

func (x *ID) GetNum() int64 {
	if x != nil {
		if x, ok := x.Kind.(*ID_Num); ok {
			return x.Num
		}
	}
	return 0
}

type isID_Kind interface {
	isID_Kind()
}

type ID_Str struct {
	Str string `protobuf:"bytes,1,opt,name=str,proto3,oneof"`
}

type ID_Num struct {
	Num int64 `protobuf:"varint,2,opt,name=num,proto3,oneof"`
}

func (*ID_Str) isID_Kind() {}

func (*ID_Num) isID_Kind() {}

type GenericJSONRPCMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jsonrpc       string                 `protobuf:"bytes,1,opt,name=jsonrpc,proto3" json:"jsonrpc,omitempty"`
	TypedId       *ID                    `protobuf:"bytes,2,opt,name=typed_id,json=typedId,proto3" json:"typed_id,omitempty"`
	Method        string                 `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Params        *structpb.Struct       `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	Result        *structpb.Struct       `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	Error         *JSONRPCError          `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenericJSONRPCMessage) Reset() {
	*x = GenericJSONRPCMessage{}
	mi := &file_jsonrpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenericJSONRPCMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericJSONRPCMessage) ProtoMessage() {}

func (x *GenericJSONRPCMessage) ProtoReflect() protoreflect.Message {
	mi := &file_jsonrpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericJSONRPCMessage.ProtoReflect.Descriptor instead.
func (*GenericJSONRPCMessage) Descriptor() ([]byte, []int) {
	return file_jsonrpc_proto_rawDescGZIP(), []int{1}
}

func (x *GenericJSONRPCMessage) GetJsonrpc() string {
	if x != nil {
		return x.Jsonrpc
	}
	return ""
}

func (x *GenericJSONRPCMessage) GetTypedId() *ID {
	if x != nil {
		return x.TypedId
	}
	return nil
}

func (x *GenericJSONRPCMessage) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *GenericJSONRPCMessage) GetParams() *structpb.Struct {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GenericJSONRPCMessage) GetResult() *structpb.Struct {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GenericJSONRPCMessage) GetError() *JSONRPCError {
	if x != nil {
		return x.Error
	}
	return nil
}

type JSONRPCError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JSONRPCError) Reset() {
	*x = JSONRPCError{}
	mi := &file_jsonrpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JSONRPCError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JSONRPCError) ProtoMessage() {}

func (x *JSONRPCError) ProtoReflect() protoreflect.Message {
	mi := &file_jsonrpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JSONRPCError.ProtoReflect.Descriptor instead.
func (*JSONRPCError) Descriptor() ([]byte, []int) {
	return file_jsonrpc_proto_rawDescGZIP(), []int{2}
}

func (x *JSONRPCError) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *JSONRPCError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JSONRPCError) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_jsonrpc_proto protoreflect.FileDescriptor

const file_jsonrpc_proto_rawDesc = "" +
	"\n" +
	"\rjsonrpc.proto\x1a\x1cgoogle/protobuf/struct.proto\"4\n" +
	"\x02ID\x12\x12\n" +
	"\x03str\x18\x01 \x01(\tH\x00R\x03str\x12\x12\n" +
	"\x03num\x18\x02 \x01(\x03H\x00R\x03numB\x06\n" +
	"\x04kind\"\xf0\x01\n" +
	"\x15GenericJSONRPCMessage\x12\x18\n" +
	"\ajsonrpc\x18\x01 \x01(\tR\ajsonrpc\x12\x1e\n" +
	"\btyped_id\x18\x02 \x01(\v2\x03.IDR\atypedId\x12\x16\n" +
	"\x06method\x18\x03 \x01(\tR\x06method\x12/\n" +
	"\x06params\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x06params\x12/\n" +
	"\x06result\x18\x05 \x01(\v2\x17.google.protobuf.StructR\x06result\x12#\n" +
	"\x05error\x18\x06 \x01(\v2\r.JSONRPCErrorR\x05error\"P\n" +
	"\fJSONRPCError\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data2Q\n" +
	"\x0eJSONRPCService\x12?\n" +
	"\tTransport\x12\x16.GenericJSONRPCMessage\x1a\x16.GenericJSONRPCMessage(\x010\x01B?Z=github.com/rustycl0ck/mcp-grpc-transport/pkg/protogen/jsonrpcb\x06proto3"

var (
	file_jsonrpc_proto_rawDescOnce sync.Once
	file_jsonrpc_proto_rawDescData []byte
)

func file_jsonrpc_proto_rawDescGZIP() []byte {
	file_jsonrpc_proto_rawDescOnce.Do(func() {
		file_jsonrpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_jsonrpc_proto_rawDesc), len(file_jsonrpc_proto_rawDesc)))
	})
	return file_jsonrpc_proto_rawDescData
}

var file_jsonrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_jsonrpc_proto_goTypes = []any{
	(*ID)(nil),                    // 0: ID
	(*GenericJSONRPCMessage)(nil), // 1: GenericJSONRPCMessage
	(*JSONRPCError)(nil),          // 2: JSONRPCError
	(*structpb.Struct)(nil),       // 3: google.protobuf.Struct
}
var file_jsonrpc_proto_depIdxs = []int32{
	0, // 0: GenericJSONRPCMessage.typed_id:type_name -> ID
	3, // 1: GenericJSONRPCMessage.params:type_name -> google.protobuf.Struct
	3, // 2: GenericJSONRPCMessage.result:type_name -> google.protobuf.Struct
	2, // 3: GenericJSONRPCMessage.error:type_name -> JSONRPCError
	1, // 4: JSONRPCService.Transport:input_type -> GenericJSONRPCMessage
	1, // 5: JSONRPCService.Transport:output_type -> GenericJSONRPCMessage
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_jsonrpc_proto_init() }
func file_jsonrpc_proto_init() {
	if File_jsonrpc_proto != nil {
		return
	}
	file_jsonrpc_proto_msgTypes[0].OneofWrappers = []any{
		(*ID_Str)(nil),
		(*ID_Num)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_jsonrpc_proto_rawDesc), len(file_jsonrpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jsonrpc_proto_goTypes,
		DependencyIndexes: file_jsonrpc_proto_depIdxs,
		MessageInfos:      file_jsonrpc_proto_msgTypes,
	}.Build()
	File_jsonrpc_proto = out.File
	file_jsonrpc_proto_goTypes = nil
	file_jsonrpc_proto_depIdxs = nil
}
